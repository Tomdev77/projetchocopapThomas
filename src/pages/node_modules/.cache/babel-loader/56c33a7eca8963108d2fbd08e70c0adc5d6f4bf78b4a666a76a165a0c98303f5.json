{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\pages\\\\chocolatPanelproduct.jsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/chocolat.css\";\nimport PanierContext from \"../store/panier-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Chocolat() {\n  _s2();\n  var _s = $RefreshSig$();\n  const [chocolats, setChocolats] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [prixMin, setPrixMin] = useState(\"\");\n  const [prixMax, setPrixMax] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [noteMin, setNoteMin] = useState(\"\");\n  const [noteMax, setNoteMax] = useState(\"\");\n  const [cart, setCart] = useState({});\n  const [setCartState] = useState({});\n  const {\n    removeItemFromCart\n  } = useContext(PanierContext);\n  const ProductItem = ({\n    chocolat\n  }) => {\n    _s();\n    const {\n      addItemToCart\n    } = useContext(PanierContext);\n    const handleReset = () => {\n      setCart({}); // Réinitialise le panier à un objet vide\n      setSelectedCategories([]); // Réinitialise les catégories sélectionnées à un tableau vide\n      setPrixMin(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n      setPrixMax(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n      setNoteMin(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n      setNoteMax(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n    };\n\n    // récolte des données du fichier json et interprétation de ce des données en affichage \n    // calcul les catégories uniques à partir des données récupéres \n\n    useEffect(() => {\n      fetch(\"data.json\").then(response => response.json()).then(data => {\n        setChocolats(data.chocolats);\n        const uniqueCategories = Object.keys(data.chocolats.reduce((acc, chocolat) => {\n          return {\n            ...acc,\n            ...chocolat.category\n          };\n        }, {}));\n\n        // ajout nouvelle category à la liste des categories uniques\n\n        const newCategory = \"Tous les produits\";\n        const updatedUniqueCategories = [newCategory, ...uniqueCategories];\n        setCategories(updatedUniqueCategories);\n      }).catch(error => console.error(\"Error fetching data:\", error));\n    }, []);\n\n    //  mise en place filtre prix min et prix max\n\n    console.log(categories);\n    const handlePrixMinChange = e => {\n      setPrixMin(e.target.value);\n    };\n    const handlePrixMaxChange = e => {\n      setPrixMax(e.target.value);\n    };\n\n    //  mise en place filtre Note min et Note max\n\n    console.log(categories);\n    const handleNoteMinChange = e => {\n      setNoteMin(e.target.value);\n    };\n    const handleNoteMaxChange = e => {\n      setNoteMax(e.target.value);\n    };\n\n    // fonction qui semble changer l'état de selection d'une catégorie . si elle est slectionnée , elle est déslectionnées et si elle est déselectionnée , elle est selectionnée.\n    // si une autre catégorie est sélectionnée et que \"tous les produits\" est sélectionnée, \"tous les produits\" est déselectionnée\n    const handleCategoryChange = category => {\n      let updatedCategories;\n      if (category === \"Tous les produits\") {\n        updatedCategories = selectedCategories.includes(category) ? [] : [\"Tous les produits\"];\n      } else {\n        updatedCategories = [...selectedCategories];\n        const index = updatedCategories.indexOf(category);\n        if (index === -1) {\n          updatedCategories.push(category);\n        } else {\n          updatedCategories.splice(index, 1);\n        }\n        const tousLesProduitsIndex = updatedCategories.indexOf(\"Tous les produits\");\n        if (tousLesProduitsIndex !== -1) {\n          updatedCategories.splice(tousLesProduitsIndex, 1);\n        }\n      }\n      setSelectedCategories(updatedCategories);\n      console.log(updatedCategories);\n    };\n\n    // selection du tableau chocolats, la condition vérifie si selected categories inclut tous les produits . une cotégorie est sélectionnée ou toutes les catégorie.\n\n    const filteredChocolats = chocolats.filter(chocolat => {\n      const isTousLesProduitsSelected = selectedCategories.includes(\"Tous les produits\");\n      const isCategoryMatch = isTousLesProduitsSelected || selectedCategories.length === 0 || selectedCategories.some(category => chocolat.category[category]);\n\n      // filtrage catégorie produit et fourchette de prix => si chocolat remplit les deux condtions alors il sera affiché dans le tableau\n\n      const isPriceInRange = (prixMin === \"\" || chocolat.price >= parseFloat(prixMin)) && (prixMax === \"\" || chocolat.price <= parseFloat(prixMax));\n\n      // filtrage catégorie produit et fourchette de notes => si chocolat remplit les deux condtions alors il sera affiché dans le tableau\n\n      const isNoteInRange = (noteMin === \"\" || chocolat.note >= parseFloat(noteMin)) && (noteMax === \"\" || chocolat.note <= parseFloat(noteMax));\n      return isCategoryMatch && isPriceInRange && isNoteInRange;\n    });\n    const handleAddToCart = chocolatId => {\n      setCart(prevCart => ({\n        ...prevCart,\n        [chocolatId]: (prevCart[chocolatId] || 0) + 1\n      }));\n    };\n    const handleRemoveFromCart = chocolatId => {\n      if (cart[chocolatId] > 1) {\n        setCart(prevCart => ({\n          ...prevCart,\n          [chocolatId]: prevCart[chocolatId] - 1\n        }));\n      } else {\n        const newCart = {\n          ...cart\n        };\n        delete newCart[chocolatId];\n        setCart(newCart);\n      }\n    };\n\n    //const handleValidateCart = () => {\n    //alert(\"Votre panier a été validé avec succès !\");\n    //};\n    //<button onClick={handleValidateCart}>Valider le panier</button>\n\n    const handleCloseCart = () => {\n      // Logique pour fermer le panier\n\n      // Réinitialiser le panier\n      setCartState({\n        items: []\n      }); // Supposons que votre état du panier soit un tableau d'articles\n    };\n\n    // const{removeFromCart}=useContext(PanierContext);\n\n    // Style pour l'affichage de l'image\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"containerForm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filtre \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"categoriepanel\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Cat\\xE9gorie \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 11\n          }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: `Panel1form_${category}`,\n              name: category,\n              checked: selectedCategories.includes(category),\n              onChange: () => handleCategoryChange(category)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: `Panel1form_${category}`,\n              children: category\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 15\n            }, this)]\n          }, category, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Prix \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Prix minimum\",\n              value: prixMin,\n              min: \"1\",\n              max: \"50\",\n              onChange: handlePrixMinChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Prix Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Prix maximum\",\n              value: prixMax,\n              min: \"1\",\n              max: \"50\",\n              onChange: handlePrixMaxChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Prix Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Notes \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Note minimum\",\n              value: noteMin,\n              min: \"1\",\n              max: \"5\",\n              onChange: handleNoteMinChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Note Min\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Note maximum\",\n              value: noteMax,\n              min: \"1\",\n              max: \"5\",\n              onChange: handleNoteMaxChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Note Max\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"resetbutt\",\n              onClick: handleReset,\n              children: \"R\\xE9initialiser le filtre\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 9\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mobileDropdownContainer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"article\", {\n        className: \"fetchdatadesktop1\",\n        children: filteredChocolats.map(chocolat => /*#__PURE__*/_jsxDEV(\"section\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(`../images/${chocolat.image}`),\n            alt: \"imgjson\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: chocolat.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"prix : \", chocolat.price, \" \\u20AC\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Note clients : \", chocolat.note]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"buttaddproduct\",\n              onClick: () => addItemToCart(chocolat.id),\n              children: [\"Ajouter au panier (\", cart[chocolat.id] || 0, \")\", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"buttaddproduct\",\n                onClick: () => handleAddToCart(chocolat.id),\n                children: \"+1\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"buttinfos\",\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                href: \"/ficheproduit\",\n                children: \"En savoir plus\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 39\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"resetbutt\",\n              onClick: handleReset,\n              children: [\"Renitialiser le panier(\", cart[chocolat.id] || 0, \")\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 14\n          }, this)]\n        }, chocolat.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  };\n  _s(ProductItem, \"UDbjf4h4vYI311dgWEm/X80obW0=\");\n}\n_s2(Chocolat, \"s/rn3jm2emgvrWUAWywaUnhwA6g=\");\n_c = Chocolat;\nvar _c;\n$RefreshReg$(_c, \"Chocolat\");","map":{"version":3,"names":["React","useState","useEffect","useContext","PanierContext","jsxDEV","_jsxDEV","Fragment","_Fragment","Chocolat","_s2","_s","$RefreshSig$","chocolats","setChocolats","selectedCategories","setSelectedCategories","prixMin","setPrixMin","prixMax","setPrixMax","categories","setCategories","noteMin","setNoteMin","noteMax","setNoteMax","cart","setCart","setCartState","removeItemFromCart","ProductItem","chocolat","addItemToCart","handleReset","fetch","then","response","json","data","uniqueCategories","Object","keys","reduce","acc","category","newCategory","updatedUniqueCategories","catch","error","console","log","handlePrixMinChange","e","target","value","handlePrixMaxChange","handleNoteMinChange","handleNoteMaxChange","handleCategoryChange","updatedCategories","includes","index","indexOf","push","splice","tousLesProduitsIndex","filteredChocolats","filter","isTousLesProduitsSelected","isCategoryMatch","length","some","isPriceInRange","price","parseFloat","isNoteInRange","note","handleAddToCart","chocolatId","prevCart","handleRemoveFromCart","newCart","handleCloseCart","items","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","id","name","checked","onChange","htmlFor","placeholder","min","max","onClick","src","require","image","alt","title","href","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/pages/chocolatPanelproduct.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/chocolat.css\";\nimport PanierContext from \"../store/panier-context\";\n\n\nexport default function Chocolat() {\n\n  \n  const [chocolats, setChocolats] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [prixMin, setPrixMin] = useState(\"\");\n  const [prixMax, setPrixMax] = useState(\"\");\n  const [categories, setCategories] = useState([]);\n  const [noteMin, setNoteMin] = useState(\"\");\n  const [noteMax, setNoteMax] = useState(\"\");\n  const [cart, setCart] = useState({});\n  const [setCartState] = useState({});\n  const {removeItemFromCart } = useContext(PanierContext);\n  \n  const ProductItem = ({ chocolat }) => {\n    \n    \n  const { addItemToCart } = useContext(PanierContext);\n\n  \n  const handleReset = () => {\n    setCart({}); // Réinitialise le panier à un objet vide\n    setSelectedCategories([]); // Réinitialise les catégories sélectionnées à un tableau vide\n    setPrixMin(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n    setPrixMax(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n    setNoteMin(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n    setNoteMax(\"\"); // Réinitialise à 0 ou à une valeur par défaut si nécessaire\n  };\n\n  // récolte des données du fichier json et interprétation de ce des données en affichage \n  // calcul les catégories uniques à partir des données récupéres \n\n  useEffect(() => {\n    fetch(\"data.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setChocolats(data.chocolats);\n        const uniqueCategories = Object.keys(\n          data.chocolats.reduce((acc, chocolat) => {\n            return { ...acc, ...chocolat.category };\n          }, {})\n        );\n\n\n// ajout nouvelle category à la liste des categories uniques\n\n        const newCategory = \"Tous les produits\";\n        const updatedUniqueCategories = [newCategory, ...uniqueCategories];\n        setCategories(updatedUniqueCategories);\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n\n  //  mise en place filtre prix min et prix max\n\n  console.log(categories);\n  const handlePrixMinChange = (e) => {\n    setPrixMin(e.target.value);\n  };\n  const handlePrixMaxChange = (e) => {\n    setPrixMax(e.target.value);\n  };\n\n\n  //  mise en place filtre Note min et Note max\n\n  console.log(categories);\n  const handleNoteMinChange = (e) => {\n    setNoteMin(e.target.value);\n  };\n  const handleNoteMaxChange = (e) => {\n    setNoteMax(e.target.value);\n  };\n\n\n// fonction qui semble changer l'état de selection d'une catégorie . si elle est slectionnée , elle est déslectionnées et si elle est déselectionnée , elle est selectionnée.\n// si une autre catégorie est sélectionnée et que \"tous les produits\" est sélectionnée, \"tous les produits\" est déselectionnée\n  const handleCategoryChange = (category) => {\n    let updatedCategories;\n    if (category === \"Tous les produits\") {\n      updatedCategories = selectedCategories.includes(category)\n        ? []\n        : [\"Tous les produits\"];\n    } else {\n      updatedCategories = [...selectedCategories];\n      const index = updatedCategories.indexOf(category);\n      if (index === -1) {\n        updatedCategories.push(category);\n      } else {\n        updatedCategories.splice(index, 1);\n      }\n      const tousLesProduitsIndex =\n        updatedCategories.indexOf(\"Tous les produits\");\n      if (tousLesProduitsIndex !== -1) {\n        updatedCategories.splice(tousLesProduitsIndex, 1);\n      }\n    }\n    setSelectedCategories(updatedCategories);\n    console.log(updatedCategories);\n  };\n\n\n// selection du tableau chocolats, la condition vérifie si selected categories inclut tous les produits . une cotégorie est sélectionnée ou toutes les catégorie.\n\nconst filteredChocolats = chocolats.filter((chocolat) => {\n  const isTousLesProduitsSelected =\n    selectedCategories.includes(\"Tous les produits\");\n  const isCategoryMatch =\n    isTousLesProduitsSelected ||\n    selectedCategories.length === 0 ||\n    selectedCategories.some((category) => chocolat.category[category]);\n\n        // filtrage catégorie produit et fourchette de prix => si chocolat remplit les deux condtions alors il sera affiché dans le tableau\n\n\n        const isPriceInRange =\n        (prixMin === \"\" || chocolat.price >= parseFloat(prixMin)) &&\n        (prixMax === \"\" || chocolat.price <= parseFloat(prixMax));\n\n\n  \n        // filtrage catégorie produit et fourchette de notes => si chocolat remplit les deux condtions alors il sera affiché dans le tableau\n\n\n        const isNoteInRange =\n        (noteMin === \"\" || chocolat.note >= parseFloat(noteMin)) &&\n        (noteMax === \"\" || chocolat.note <= parseFloat(noteMax));\n\n        return isCategoryMatch && isPriceInRange && isNoteInRange;});\n\n      \n\n        const handleAddToCart = (chocolatId) => {\n          setCart((prevCart) => ({\n            ...prevCart,\n            [chocolatId]: (prevCart[chocolatId] || 0) + 1,\n          }));\n        };\n\n        const handleRemoveFromCart = (chocolatId) => {\n          if (cart[chocolatId] > 1) {\n            setCart((prevCart) => ({\n              ...prevCart,\n              [chocolatId]: prevCart[chocolatId] - 1,\n            }));\n          } else {\n            const newCart = { ...cart };\n            delete newCart[chocolatId];\n            setCart(newCart);\n          }\n        };\n\n        //const handleValidateCart = () => {\n          //alert(\"Votre panier a été validé avec succès !\");\n        //};\n        //<button onClick={handleValidateCart}>Valider le panier</button>\n\n        const handleCloseCart = () => {\n          // Logique pour fermer le panier\n      \n          // Réinitialiser le panier\n          setCartState({ items: [] });  // Supposons que votre état du panier soit un tableau d'articles\n      };\n\n       // const{removeFromCart}=useContext(PanierContext);\n\n        \n      // Style pour l'affichage de l'image\n\n\n\n  return (\n    <>\n      <div className=\"containerForm\">\n        <h4>Filtre </h4>\n        <div className=\"categoriepanel\">\n          <h4>Catégorie </h4>\n\n          {categories.map((category) => (\n            <div key={category}>\n              <input\n                type=\"checkbox\"\n                id={`Panel1form_${category}`}\n                name={category}\n                checked={selectedCategories.includes(category)}\n                onChange={() => handleCategoryChange(category)}\n              />\n              <label htmlFor={`Panel1form_${category}`}>{category}</label>\n              <br />\n            </div>\n          ))}\n\n          <h4>Prix </h4>\n          <div>\n            <input\n              type=\"number\"\n              placeholder=\"Prix minimum\"\n              value={prixMin}\n              min=\"1\"\n              max=\"50\"\n              onChange={handlePrixMinChange}\n            />\n            <p>Prix Min</p>\n            <input\n              type=\"number\"\n              placeholder=\"Prix maximum\"\n              value={prixMax}\n              min=\"1\"\n              max=\"50\"\n              onChange={handlePrixMaxChange}\n            />\n            <p>Prix Max</p>\n\n            \n          </div>\n\n          <h4>Notes </h4>\n          <div>\n            <input\n              type=\"number\"\n              placeholder=\"Note minimum\"\n              value={noteMin}\n              min=\"1\"\n              max=\"5\"\n              onChange={handleNoteMinChange}\n            />\n            <p>Note Min</p>\n            <input\n              type=\"number\"\n              placeholder=\"Note maximum\"\n              value={noteMax}\n              min=\"1\"\n              max=\"5\"\n              onChange={handleNoteMaxChange}\n            />\n            <p>Note Max</p>\n        {/* Bouton de réinitialisation */}\n        <span className=\"resetbutt\" onClick={handleReset}>Réinitialiser le filtre</span>\n        <div className=\"mobileDropdownContainer\"></div>\n          </div>\n          </div>\n          </div>\n      \n      <article className='fetchdatadesktop1'>\n        {filteredChocolats.map((chocolat) => (\n          <section key={chocolat.id}>\n            <img src={require(`../images/${chocolat.image}`)} alt=\"imgjson\" />\n            <h2>{chocolat.title}</h2>\n            <p>prix : {chocolat.price} €</p>\n            <p>Note clients : {chocolat.note}</p>\n\n             {/* Compteur et bouton d'ajout au panier */}\n             <div>\n             <span className=\"buttaddproduct\" onClick={() => addItemToCart(chocolat.id)}>\n              Ajouter au panier ({cart[chocolat.id] || 0})\n              <span className=\"buttaddproduct\" onClick={() => handleAddToCart(chocolat.id)}>\n              +1\n              </span>\n              </span>\n            \n\n          <span className=\"buttinfos\"><a href=\"/ficheproduit\">En savoir plus</a></span>\n          <span className=\"resetbutt\" onClick={handleReset}>Renitialiser le panier({cart[chocolat.id] || 0})</span>\n\n            </div>\n          </section>\n        ))}\n      </article>\n    </>\n  );\n}}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}