{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\components\\\\Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/chocolat.css\";\nimport \"../styles/dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function MobileDropdown() {\n  _s();\n  const [chocolats, setChocolats] = useState([]);\n  const [selectedCategories, setSelectedCategories, setSelectedCategory] = useState([]);\n  const [prixMin, setPrixMin] = useState(\"\");\n  const [prixMax, setPrixMax] = useState(\"\");\n  const [setCategories] = useState([]);\n  const [noteMin, setNoteMin] = useState(\"\");\n  const [noteMax, setNoteMax] = useState(\"\");\n  const filteredChocolats = chocolats.filter(chocolat => {\n    // ...\n  });\n  const categories = ['Tous les produits', 'blanc', 'lait', 'noir', 'caramel', 'noix', 'fruit', 'liqueur'];\n  const handleClick = category => {\n    setSelectedCategory(category);\n  };\n  // récolte des données du fichier json et interprétation de ce des données en affichage \n  // calcul les catégories uniques à partir des données récupéres \n\n  useEffect(() => {\n    fetch(\"data.json\").then(response => response.json()).then(data => {\n      setChocolats(data.chocolats);\n      const uniqueCategories = Object.keys(data.chocolats.reduce((acc, chocolat) => {\n        return {\n          ...acc,\n          ...chocolat.category\n        };\n      }, {}));\n\n      // ajout nouvelle category à la liste des categories uniques\n\n      const newCategory = \"Tous les produits\";\n      const updatedUniqueCategories = [newCategory, ...uniqueCategories];\n      setCategories(updatedUniqueCategories);\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  //  mise en place filtre prix min et prix max\n\n  console.log(categories);\n  const handlePrixMinChange = e => {\n    setPrixMin(e.target.value);\n  };\n  const handlePrixMaxChange = e => {\n    setPrixMax(e.target.value);\n  };\n\n  //  mise en place filtre Note min et Note max\n\n  console.log(categories);\n  const handleNoteMinChange = e => {\n    setNoteMin(e.target.value);\n  };\n  const handleNoteMaxChange = e => {\n    setNoteMax(e.target.value);\n  };\n  const handleCategoryChange = category => {\n    let updatedCategories;\n    if (category === \"Tous les produits\") {\n      updatedCategories = selectedCategories.includes(category) ? [] : [\"Tous les produits\"];\n    } else {\n      updatedCategories = selectedCategories.includes(category) ? selectedCategories.filter(cat => cat !== category) : [...selectedCategories, category];\n      const tousLesProduitsIndex = updatedCategories.indexOf(\"Tous les produits\");\n      if (tousLesProduitsIndex !== -1) {\n        updatedCategories.splice(tousLesProduitsIndex, 1);\n      }\n    }\n    setSelectedCategories(updatedCategories);\n    console.log(updatedCategories);\n  };\n\n  // bouton de reinitialisation à 0 , filtrage prix + filtrage note\n\n  const handleReset = () => {\n    setPrixMin(\"\");\n    setPrixMax(\"\");\n    setNoteMin(\"\");\n    setNoteMax(\"\");\n    setSelectedCategories([]);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobileDropdownContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Cat\\xE9gorie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mobileDropdownContent\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Filtre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          value: selectedCategories,\n          onChange: handleCategoryChange,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"S\\xE9lectionner une cat\\xE9gorie\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this), categories.map((category, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            onClick: () => handleClick(category),\n            value: category,\n            children: category\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fetchdatamobile\",\n      children: filteredChocolats.map(chocolat => /*#__PURE__*/_jsxDEV(\"section\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(`../images/${chocolat.image}`),\n          alt: \"imgjson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: chocolat.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"prix : \", chocolat.price, \" \\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Note clients : \", chocolat.note]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 19\n        }, this)]\n      }, chocolat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(MobileDropdown, \"tzIX+tSaQQIUC7sBSvXszY5z/No=\");\n_c = MobileDropdown;\n;\nvar _c;\n$RefreshReg$(_c, \"MobileDropdown\");","map":{"version":3,"names":["React","useState","useEffect","useContext","jsxDEV","_jsxDEV","Fragment","_Fragment","MobileDropdown","_s","chocolats","setChocolats","selectedCategories","setSelectedCategories","setSelectedCategory","prixMin","setPrixMin","prixMax","setPrixMax","setCategories","noteMin","setNoteMin","noteMax","setNoteMax","filteredChocolats","filter","chocolat","categories","handleClick","category","fetch","then","response","json","data","uniqueCategories","Object","keys","reduce","acc","newCategory","updatedUniqueCategories","catch","error","console","log","handlePrixMinChange","e","target","value","handlePrixMaxChange","handleNoteMinChange","handleNoteMaxChange","handleCategoryChange","updatedCategories","includes","cat","tousLesProduitsIndex","indexOf","splice","handleReset","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","index","onClick","src","require","image","alt","title","price","note","id","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/components/Dropdown.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../styles/chocolat.css\";\r\nimport \"../styles/dropdown.css\";\r\n\r\nexport default function MobileDropdown() {\r\n\r\n  \r\n  const [chocolats, setChocolats] = useState([]);\r\n  const [selectedCategories, setSelectedCategories,setSelectedCategory ] = useState([]);\r\n  const [prixMin, setPrixMin] = useState(\"\");\r\n  const [prixMax, setPrixMax] = useState(\"\");\r\n  const [setCategories] = useState([]);\r\n  const [noteMin, setNoteMin] = useState(\"\");\r\n  const [noteMax, setNoteMax] = useState(\"\");\r\nconst filteredChocolats = chocolats.filter((chocolat) => {\r\n  // ...\r\n});\r\nconst categories = ['Tous les produits', 'blanc', 'lait', 'noir', 'caramel', 'noix', 'fruit', 'liqueur'];\r\nconst handleClick = (category) => {\r\n  setSelectedCategory(category);\r\n};\r\n  // récolte des données du fichier json et interprétation de ce des données en affichage \r\n  // calcul les catégories uniques à partir des données récupéres \r\n\r\n  useEffect(() => {\r\n    fetch(\"data.json\")\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setChocolats(data.chocolats);\r\n        const uniqueCategories = Object.keys(\r\n          data.chocolats.reduce((acc, chocolat) => {\r\n            return { ...acc, ...chocolat.category };\r\n          }, {})\r\n        );\r\n\r\n\r\n// ajout nouvelle category à la liste des categories uniques\r\n\r\n        const newCategory = \"Tous les produits\";\r\n        const updatedUniqueCategories = [newCategory, ...uniqueCategories];\r\n        setCategories(updatedUniqueCategories);\r\n      })\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n\r\n  //  mise en place filtre prix min et prix max\r\n\r\n  console.log(categories);\r\n  const handlePrixMinChange = (e) => {\r\n    setPrixMin(e.target.value);\r\n  };\r\n  const handlePrixMaxChange = (e) => {\r\n    setPrixMax(e.target.value);\r\n  };\r\n\r\n\r\n  //  mise en place filtre Note min et Note max\r\n\r\n  console.log(categories);\r\n  const handleNoteMinChange = (e) => {\r\n    setNoteMin(e.target.value);\r\n  };\r\n  const handleNoteMaxChange = (e) => {\r\n    setNoteMax(e.target.value);\r\n  };\r\n\r\n  const handleCategoryChange = (category) => {\r\n    let updatedCategories;\r\n    \r\n    if (category === \"Tous les produits\") {\r\n      updatedCategories = selectedCategories.includes(category) ? [] : [\"Tous les produits\"];\r\n    } else {\r\n      updatedCategories = selectedCategories.includes(category)\r\n        ? selectedCategories.filter((cat) => cat !== category)\r\n        : [...selectedCategories, category];\r\n      \r\n      const tousLesProduitsIndex = updatedCategories.indexOf(\"Tous les produits\");\r\n      if (tousLesProduitsIndex !== -1) {\r\n        updatedCategories.splice(tousLesProduitsIndex, 1);\r\n      }\r\n    }\r\n    \r\n    setSelectedCategories(updatedCategories);\r\n    console.log(updatedCategories);\r\n  };\r\n\r\n\r\n      // bouton de reinitialisation à 0 , filtrage prix + filtrage note\r\n\r\n      const handleReset = () => {\r\n\r\n      \r\n        setPrixMin(\"\");\r\n        setPrixMax(\"\");\r\n        setNoteMin(\"\");\r\n        setNoteMax(\"\");\r\n        \r\n      setSelectedCategories([]);\r\n      };\r\n        return (\r\n          <><div className=\"mobileDropdownContainer\">\r\n            <h4>Catégorie</h4>\r\n            <div className=\"mobileDropdownContent\">\r\n              <h4>Filtre</h4>\r\n              <select value={selectedCategories} onChange={handleCategoryChange}>\r\n                <option value=\"\">Sélectionner une catégorie</option>\r\n                {categories.map((category, index) => (\r\n                  <option key={index} onClick={() => handleClick(category)} value={category}>\r\n                    {category}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n            \r\n            <div className='fetchdatamobile'>\r\n              {filteredChocolats.map((chocolat) => (\r\n                <section key={chocolat.id}>\r\n                  <img src={require(`../images/${chocolat.image}`)} alt=\"imgjson\" />\r\n                  <h2>{chocolat.title}</h2>\r\n                  <p>prix : {chocolat.price} €</p>\r\n                  <p>Note clients : {chocolat.note}</p>\r\n\r\n                </section>\r\n              ))}\r\n            </div>\r\n       \r\n            \r\n            </>\r\n        );\r\n      };\r\n      \r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}