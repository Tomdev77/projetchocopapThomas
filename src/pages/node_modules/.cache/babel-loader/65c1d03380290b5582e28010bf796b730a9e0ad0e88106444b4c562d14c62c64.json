{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useEffect, useReducer, useCallback } from \"react\";\nimport debounce from \"lodash/debounce\";\nconst INTERSECTION_THRESHOLD = 5;\nconst LOAD_DELAY_MS = 500;\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"set\":\n      {\n        return {\n          ...state,\n          ...action.payload\n        };\n      }\n    case \"onGrabData\":\n      {\n        return {\n          ...state,\n          loading: false,\n          data: [...state.data, ...action.payload.data],\n          currentPage: state.currentPage + 1\n        };\n      }\n    default:\n      return state;\n  }\n};\nconst useLazyLoad = ({\n  triggerRef,\n  onGrabData,\n  options\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(reducer, {\n    loading: false,\n    currentPage: 1,\n    data: []\n  });\n  const _handleEntry = async entry => {\n    const boundingRect = entry.boundingClientRect;\n    const intersectionRect = entry.intersectionRect;\n    if (!state.loading && entry.isIntersecting && intersectionRect.bottom - boundingRect.bottom <= INTERSECTION_THRESHOLD) {\n      dispatch({\n        type: \"set\",\n        payload: {\n          loading: true\n        }\n      });\n      const data = await onGrabData(state.currentPage);\n      dispatch({\n        type: \"onGrabData\",\n        payload: {\n          data\n        }\n      });\n    }\n  };\n  const handleEntry = debounce(_handleEntry, LOAD_DELAY_MS);\n  const onIntersect = useCallback(entries => {\n    handleEntry(entries[0]);\n  }, [handleEntry]);\n  useEffect(() => {\n    if (triggerRef.current) {\n      const container = triggerRef.current;\n      const observer = new IntersectionObserver(onIntersect, options);\n      observer.observe(container);\n      return () => {\n        observer.disconnect();\n      };\n    }\n  }, [triggerRef, onIntersect, options]);\n  return state;\n};\n_s(useLazyLoad, \"KWELa2BgYqPOHJR+AV8FQGh2OBc=\");\nexport default useLazyLoad;","map":{"version":3,"names":["useEffect","useReducer","useCallback","debounce","INTERSECTION_THRESHOLD","LOAD_DELAY_MS","reducer","state","action","type","payload","loading","data","currentPage","useLazyLoad","triggerRef","onGrabData","options","_s","dispatch","_handleEntry","entry","boundingRect","boundingClientRect","intersectionRect","isIntersecting","bottom","handleEntry","onIntersect","entries","current","container","observer","IntersectionObserver","observe","disconnect"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/components/useLazyLoad.jsx"],"sourcesContent":["import { useEffect, useReducer, useCallback } from \"react\";\r\nimport debounce from \"lodash/debounce\";\r\n\r\nconst INTERSECTION_THRESHOLD = 5;\r\nconst LOAD_DELAY_MS = 500;\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"set\": {\r\n      return {\r\n        ...state,\r\n        ...action.payload\r\n      };\r\n    }\r\n    case \"onGrabData\": {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        data: [...state.data, ...action.payload.data],\r\n        currentPage: state.currentPage + 1\r\n      };\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst useLazyLoad = ({ triggerRef, onGrabData, options }) => {\r\n  const [state, dispatch] = useReducer(reducer, {\r\n    loading: false,\r\n    currentPage: 1,\r\n    data: []\r\n  });\r\n\r\n  const _handleEntry = async (entry) => {\r\n    const boundingRect = entry.boundingClientRect;\r\n    const intersectionRect = entry.intersectionRect;\r\n\r\n    if (\r\n      !state.loading &&\r\n      entry.isIntersecting &&\r\n      intersectionRect.bottom - boundingRect.bottom <= INTERSECTION_THRESHOLD\r\n    ) {\r\n      dispatch({ type: \"set\", payload: { loading: true } });\r\n      const data = await onGrabData(state.currentPage);\r\n      dispatch({ type: \"onGrabData\", payload: { data } });\r\n    }\r\n  };\r\n  const handleEntry = debounce(_handleEntry, LOAD_DELAY_MS);\r\n\r\n  const onIntersect = useCallback(\r\n    (entries) => {\r\n      handleEntry(entries[0]);\r\n    },\r\n    [handleEntry]\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (triggerRef.current) {\r\n      const container = triggerRef.current;\r\n      const observer = new IntersectionObserver(onIntersect, options);\r\n\r\n      observer.observe(container);\r\n\r\n      return () => {\r\n        observer.disconnect();\r\n      };\r\n    }\r\n  }, [triggerRef, onIntersect, options]);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useLazyLoad;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,UAAU,EAAEC,WAAW,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,iBAAiB;AAEtC,MAAMC,sBAAsB,GAAG,CAAC;AAChC,MAAMC,aAAa,GAAG,GAAG;AAEzB,MAAMC,OAAO,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAK;EACjC,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,KAAK;MAAE;QACV,OAAO;UACL,GAAGF,KAAK;UACR,GAAGC,MAAM,CAACE;QACZ,CAAC;MACH;IACA,KAAK,YAAY;MAAE;QACjB,OAAO;UACL,GAAGH,KAAK;UACRI,OAAO,EAAE,KAAK;UACdC,IAAI,EAAE,CAAC,GAAGL,KAAK,CAACK,IAAI,EAAE,GAAGJ,MAAM,CAACE,OAAO,CAACE,IAAI,CAAC;UAC7CC,WAAW,EAAEN,KAAK,CAACM,WAAW,GAAG;QACnC,CAAC;MACH;IACA;MACE,OAAON,KAAK;EAChB;AACF,CAAC;AAED,MAAMO,WAAW,GAAGA,CAAC;EAAEC,UAAU;EAAEC,UAAU;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC3D,MAAM,CAACX,KAAK,EAAEY,QAAQ,CAAC,GAAGlB,UAAU,CAACK,OAAO,EAAE;IAC5CK,OAAO,EAAE,KAAK;IACdE,WAAW,EAAE,CAAC;IACdD,IAAI,EAAE;EACR,CAAC,CAAC;EAEF,MAAMQ,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpC,MAAMC,YAAY,GAAGD,KAAK,CAACE,kBAAkB;IAC7C,MAAMC,gBAAgB,GAAGH,KAAK,CAACG,gBAAgB;IAE/C,IACE,CAACjB,KAAK,CAACI,OAAO,IACdU,KAAK,CAACI,cAAc,IACpBD,gBAAgB,CAACE,MAAM,GAAGJ,YAAY,CAACI,MAAM,IAAItB,sBAAsB,EACvE;MACAe,QAAQ,CAAC;QAAEV,IAAI,EAAE,KAAK;QAAEC,OAAO,EAAE;UAAEC,OAAO,EAAE;QAAK;MAAE,CAAC,CAAC;MACrD,MAAMC,IAAI,GAAG,MAAMI,UAAU,CAACT,KAAK,CAACM,WAAW,CAAC;MAChDM,QAAQ,CAAC;QAAEV,IAAI,EAAE,YAAY;QAAEC,OAAO,EAAE;UAAEE;QAAK;MAAE,CAAC,CAAC;IACrD;EACF,CAAC;EACD,MAAMe,WAAW,GAAGxB,QAAQ,CAACiB,YAAY,EAAEf,aAAa,CAAC;EAEzD,MAAMuB,WAAW,GAAG1B,WAAW,CAC5B2B,OAAO,IAAK;IACXF,WAAW,CAACE,OAAO,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,EACD,CAACF,WAAW,CACd,CAAC;EAED3B,SAAS,CAAC,MAAM;IACd,IAAIe,UAAU,CAACe,OAAO,EAAE;MACtB,MAAMC,SAAS,GAAGhB,UAAU,CAACe,OAAO;MACpC,MAAME,QAAQ,GAAG,IAAIC,oBAAoB,CAACL,WAAW,EAAEX,OAAO,CAAC;MAE/De,QAAQ,CAACE,OAAO,CAACH,SAAS,CAAC;MAE3B,OAAO,MAAM;QACXC,QAAQ,CAACG,UAAU,CAAC,CAAC;MACvB,CAAC;IACH;EACF,CAAC,EAAE,CAACpB,UAAU,EAAEa,WAAW,EAAEX,OAAO,CAAC,CAAC;EAEtC,OAAOV,KAAK;AACd,CAAC;AAACW,EAAA,CA5CIJ,WAAW;AA8CjB,eAAeA,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}