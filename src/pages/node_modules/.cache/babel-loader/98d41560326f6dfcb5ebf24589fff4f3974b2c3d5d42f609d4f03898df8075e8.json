{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\pages\\\\PageFicheProduit.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/ficheproduit.css\";\nimport PanierContext from \"../store/panier-context\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PageFicheProduit() {\n  _s();\n  const [chocolats, setChocolats] = useState([]);\n  const [cart, setCart] = useState({});\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const {\n    addItemToCart\n  } = useContext(PanierContext);\n  const images = {\n    image1: require('../images/produit1.jpg').default,\n    image2: require('../images/produit2.jpg').default,\n    image3: require('../images/produit3.jpg').default,\n    image4: require('../images/produit4.jpg').default,\n    image5: require('../images/produit4.jpg').default\n\n    // ... ajoutez d'autres images ici\n  };\n  useEffect(() => {\n    fetch(\"data.json\").then(response => response.json()).then(data => {\n      setChocolats(data.chocolats);\n    });\n  }, []);\n  const handleAddToCart = chocolatId => {\n    setCart(prevCart => ({\n      ...prevCart,\n      [chocolatId]: (prevCart[chocolatId] || 0) + 1\n    }));\n  };\n  const handleRemoveFromCart = chocolatId => {\n    if (cart[chocolatId] > 1) {\n      setCart(prevCart => ({\n        ...prevCart,\n        [chocolatId]: prevCart[chocolatId] - 1\n      }));\n    } else {\n      const newCart = {\n        ...cart\n      };\n      delete newCart[chocolatId];\n      setCart(newCart);\n    }\n  };\n\n  // fonction qui semble changer l'état de selection d'une catégorie . si elle est slectionnée , elle est déslectionnées et si elle est déselectionnée , elle est selectionnée.\n  // si une autre catégorie est sélectionnée et que \"tous les produits\" est sélectionnée, \"tous les produits\" est déselectionnée\n  const handleCategoryChange = category => {\n    let updatedCategories;\n    if (category === \"Tous les produits\") {\n      updatedCategories = selectedCategories.includes(category) ? [] : [\"Tous les produits\"];\n    } else {\n      updatedCategories = [...selectedCategories];\n      const index = updatedCategories.indexOf(category);\n      if (index === -1) {\n        updatedCategories.push(category);\n      } else {\n        updatedCategories.splice(index, 1);\n      }\n      const tousLesProduitsIndex = updatedCategories.indexOf(\"Tous les produits\");\n      if (tousLesProduitsIndex !== -1) {\n        updatedCategories.splice(tousLesProduitsIndex, 1);\n      }\n    }\n    setSelectedCategories(updatedCategories);\n    console.log(updatedCategories);\n  };\n  const filteredChocolats = chocolats.filter(chocolat => {\n    const isTousLesProduitsSelected = selectedCategories.includes(\"Tous les produits\");\n    const isCategoryMatch = isTousLesProduitsSelected || selectedCategories.length === 0 || selectedCategories.some(category => chocolat.category.includes(category));\n    return isCategoryMatch;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerFormficheproduct\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Filtre \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"categoriepanel\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Cat\\xE9gorie \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 15\n        }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: `Panel1form_${category}`,\n            name: category,\n            checked: selectedCategories.includes(category),\n            onChange: () => handleCategoryChange(category)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `Panel1form_${category}`,\n            children: category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this)]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"titleficheproduit\",\n      children: \"LES PRODUITS\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerficheproduct\",\n      children: filteredChocolats.map(chocolat => /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"containerparentficheproduct\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: images[chocolat.image],\n          alt: \"imgjson\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: chocolat.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"prix : \", chocolat.price, \" \\u20AC\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description du produit :\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 34\n          }, this), \" \", chocolat.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Ingr\\xE9dients : \", chocolat.ingredients]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttaddproduct\",\n            onClick: () => handleAddToCart(chocolat.id),\n            children: [\"Ajout produits (\", cart[chocolat.id] || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttremoveproduct\",\n            onClick: () => handleRemoveFromCart(chocolat.id),\n            children: \"Retirer produits\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"buttvalidateproduct\",\n            onClick: () => addItemToCart(chocolat.id),\n            children: [\"Valider au panier + (\", cart[chocolat.id] || 0, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this)]\n      }, chocolat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(PageFicheProduit, \"vtoY3O3/O3sPVJ7p86DjIMAOorg=\");\n_c = PageFicheProduit;\n;\nvar _c;\n$RefreshReg$(_c, \"PageFicheProduit\");","map":{"version":3,"names":["React","useState","useEffect","useContext","PanierContext","jsxDEV","_jsxDEV","Fragment","_Fragment","PageFicheProduit","_s","chocolats","setChocolats","cart","setCart","selectedCategories","setSelectedCategories","categories","setCategories","addItemToCart","images","image1","require","default","image2","image3","image4","image5","fetch","then","response","json","data","handleAddToCart","chocolatId","prevCart","handleRemoveFromCart","newCart","handleCategoryChange","category","updatedCategories","includes","index","indexOf","push","splice","tousLesProduitsIndex","console","log","filteredChocolats","filter","chocolat","isTousLesProduitsSelected","isCategoryMatch","length","some","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","type","id","name","checked","onChange","htmlFor","src","image","alt","title","price","description","ingredients","onClick","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/pages/PageFicheProduit.jsx"],"sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\nimport \"../styles/ficheproduit.css\";\nimport PanierContext from \"../store/panier-context\";\n\nexport default function PageFicheProduit() {\n  const [chocolats, setChocolats] = useState([]);\n  const [cart, setCart] = useState({});\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [categories, setCategories] = useState([]);\n  const { addItemToCart } = useContext(PanierContext);\n\n  const images = {\n    image1: require('../images/produit1.jpg').default,\n    image2: require('../images/produit2.jpg').default,\n    image3: require('../images/produit3.jpg').default,\n    image4: require('../images/produit4.jpg').default,\n    image5: require('../images/produit4.jpg').default,\n\n    // ... ajoutez d'autres images ici\n  };\n  useEffect(() => {\n    fetch(\"data.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setChocolats(data.chocolats);\n      });\n  }, []);\n\n  const handleAddToCart = (chocolatId) => {\n    setCart((prevCart) => ({\n      ...prevCart,\n      [chocolatId]: (prevCart[chocolatId] || 0) + 1,\n    }));\n  };\n\n  const handleRemoveFromCart = (chocolatId) => {\n    if (cart[chocolatId] > 1) {\n      setCart((prevCart) => ({\n        ...prevCart,\n        [chocolatId]: prevCart[chocolatId] - 1,\n      }));\n    } else {\n      const newCart = { ...cart };\n      delete newCart[chocolatId];\n      setCart(newCart);\n    }\n  };\n\n  // fonction qui semble changer l'état de selection d'une catégorie . si elle est slectionnée , elle est déslectionnées et si elle est déselectionnée , elle est selectionnée.\n// si une autre catégorie est sélectionnée et que \"tous les produits\" est sélectionnée, \"tous les produits\" est déselectionnée\nconst handleCategoryChange = (category) => {\n  let updatedCategories;\n  if (category === \"Tous les produits\") {\n    updatedCategories = selectedCategories.includes(category)\n      ? []\n      : [\"Tous les produits\"];\n  } else {\n    updatedCategories = [...selectedCategories];\n    const index = updatedCategories.indexOf(category);\n    if (index === -1) {\n      updatedCategories.push(category);\n    } else {\n      updatedCategories.splice(index, 1);\n    }\n    const tousLesProduitsIndex =\n      updatedCategories.indexOf(\"Tous les produits\");\n    if (tousLesProduitsIndex !== -1) {\n      updatedCategories.splice(tousLesProduitsIndex, 1);\n    }\n  }\n  setSelectedCategories(updatedCategories);\n  console.log(updatedCategories);\n};\n\n  const filteredChocolats = chocolats.filter((chocolat) => {\n    const isTousLesProduitsSelected = selectedCategories.includes(\"Tous les produits\");\n    const isCategoryMatch = \n      isTousLesProduitsSelected ||\n      selectedCategories.length === 0 ||\n      selectedCategories.some((category) => chocolat.category.includes(category));\n   \n    return isCategoryMatch;\n  });\n\n      return (\n        <>\n          <div className=\"containerFormficheproduct\">\n            <h4>Filtre </h4>\n            <div className=\"categoriepanel\">\n              <h4>Catégorie </h4>\n              {categories.map((category) => (\n                <div key={category}>\n                  <input\n                    type=\"checkbox\"\n                    id={`Panel1form_${category}`}\n                    name={category}\n                    checked={selectedCategories.includes(category)}\n                    onChange={() => handleCategoryChange(category)}\n                  />\n                  <label htmlFor={`Panel1form_${category}`}>{category}</label>\n                  <br />\n                </div>\n              ))}\n            </div> {/* Fermeture de la div 'categoriepanel' */}\n          </div> {/* Fermeture de la div 'containerForm' */}\n      \n          <h1 className=\"titleficheproduit\">LES PRODUITS</h1>\n          \n          \n      <div className=\"containerficheproduct\">\n\n      {filteredChocolats.map((chocolat) => (\n      <div id=\"containerparentficheproduct\" key={chocolat.id}>\n      {/* ... (le contenu de chaque chocolat ici) ... */}\n      <img src={images[chocolat.image]} alt=\"imgjson\" />\n      <h2>{chocolat.title}</h2>\n      <p>prix : {chocolat.price} €</p>\n      <p>Description du produit :<br /> {chocolat.description}</p>\n      <p>Ingrédients : {chocolat.ingredients}</p>\n      {/* ... (boutons et autres éléments ici) ... */}\n      <div>\n\n\n      <span className=\"buttaddproduct\" onClick={() => handleAddToCart(chocolat.id)}>\n      Ajout produits ({cart[chocolat.id] || 0})\n      </span>\n\n      <span className=\"buttremoveproduct\" onClick={() => handleRemoveFromCart(chocolat.id)}>\n      Retirer produits \n      </span>\n\n\n      <span className=\"buttvalidateproduct\" onClick={() => addItemToCart(chocolat.id)}>\n      Valider au panier + ({cart[chocolat.id] || 0})\n      </span>\n\n    \n\n\n            \n              </div>\n    </div>\n  ))}\n</div>\n        </>\n      )};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}