{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\store\\\\panier-context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport chocolats from '../data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PanierContext = /*#__PURE__*/createContext({\n  // items => éléments présents dans le panier\n  items: [],\n  addItemToCart: () => {}\n});\nconst cartReducer = (state, action) => {\n  if (action.type === \"AJOUTER_DANS_PANIER\") {\n    const updateShoppingCartItems = [...state.items];\n\n    // vérifier si l'élément en question existe \n\n    const existingElementsIndex = updateShoppingCartItems.findIndex(cartItem => cartItem.id === action.payload.productId);\n    const existingElement = updateShoppingCartItems[existingElementsIndex];\n    console.log(existingElement);\n    if (existingElement) {\n\n      // Au cas ou l'élément est déjà présent dans le panier \n    } else {\n      const product = chocolats.find(product => product.id === action.payload.productId);\n      console.log(product);\n    }\n  }\n  return state;\n};\nexport const PanierContextProvider = ({\n  children\n}) => {\n  _s();\n  const [cartState, cartDispatch] = useReducer(cartReducer, {\n    items: []\n  });\n\n  // Fonction d'ajout dans le panier \n  const handleProductToCart = productId => {\n    cartDispatch({\n      type: \"AJOUTER_DANS_PANIER\",\n      payload: productId\n    });\n  };\n  const initialValue = {\n    items: [],\n    addItemToCart: handleProductToCart\n  };\n  return /*#__PURE__*/_jsxDEV(PanierContext.Provider, {\n    value: initialValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n};\n_s(PanierContextProvider, \"orQNENfP9zFQ290RzNe5V32kfJ4=\");\n_c = PanierContextProvider;\nexport default PanierContext;\nvar _c;\n$RefreshReg$(_c, \"PanierContextProvider\");","map":{"version":3,"names":["createContext","useReducer","chocolats","jsxDEV","_jsxDEV","PanierContext","items","addItemToCart","cartReducer","state","action","type","updateShoppingCartItems","existingElementsIndex","findIndex","cartItem","id","payload","productId","existingElement","console","log","product","find","PanierContextProvider","children","_s","cartState","cartDispatch","handleProductToCart","initialValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/store/panier-context.jsx"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport chocolats from '../data.json';\r\n\r\n\r\nexport const PanierContext = createContext({\r\n    // items => éléments présents dans le panier\r\n    items: [],\r\n    addItemToCart :() =>{},\r\n});\r\n\r\n\r\nconst cartReducer = (state, action)=>{\r\n\r\nif(action.type === \"AJOUTER_DANS_PANIER\"){\r\n    const updateShoppingCartItems = [ ...state.items];\r\n\r\n    // vérifier si l'élément en question existe \r\n\r\n    const existingElementsIndex = updateShoppingCartItems.findIndex\r\n    ((cartItem)=> cartItem.id === action.payload.productId);\r\n\r\n    const existingElement= updateShoppingCartItems[\r\n        existingElementsIndex]\r\n\r\n    console.log(existingElement);\r\n    if(existingElement){\r\n\r\n// Au cas ou l'élément est déjà présent dans le panier \r\n    }else{\r\n\r\n        const product = chocolats.find((product)=>product.id === action.payload.productId);\r\n\r\n        console.log(product);\r\n\r\n    }\r\n\r\n}\r\nreturn state;\r\n};\r\n\r\nexport const PanierContextProvider = ({ children }) => {\r\nconst [cartState, cartDispatch] = useReducer(cartReducer, {\r\n\r\n        items: [],\r\n    });\r\n\r\n\r\n\r\n// Fonction d'ajout dans le panier \r\n    const handleProductToCart =(productId)=> {\r\n\r\n        cartDispatch({\r\n\r\n            type:\"AJOUTER_DANS_PANIER\",\r\n            payload: productId,\r\n\r\n        })\r\n    }\r\n\r\n\r\n    const initialValue = {\r\n        items: [],\r\n        addItemToCart :handleProductToCart,\r\n    };\r\n\r\n    return (\r\n        <PanierContext.Provider value={initialValue}>\r\n            {children}\r\n        </PanierContext.Provider>\r\n    );\r\n};\r\n\r\nexport default PanierContext;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,UAAU,QAAQ,OAAO;AACjD,OAAOC,SAAS,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,OAAO,MAAMC,aAAa,gBAAGL,aAAa,CAAC;EACvC;EACAM,KAAK,EAAE,EAAE;EACTC,aAAa,EAAEA,CAAA,KAAK,CAAC;AACzB,CAAC,CAAC;AAGF,MAAMC,WAAW,GAAGA,CAACC,KAAK,EAAEC,MAAM,KAAG;EAErC,IAAGA,MAAM,CAACC,IAAI,KAAK,qBAAqB,EAAC;IACrC,MAAMC,uBAAuB,GAAG,CAAE,GAAGH,KAAK,CAACH,KAAK,CAAC;;IAEjD;;IAEA,MAAMO,qBAAqB,GAAGD,uBAAuB,CAACE,SAAS,CAC7DC,QAAQ,IAAIA,QAAQ,CAACC,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACC,SAAS,CAAC;IAEvD,MAAMC,eAAe,GAAEP,uBAAuB,CAC1CC,qBAAqB,CAAC;IAE1BO,OAAO,CAACC,GAAG,CAACF,eAAe,CAAC;IAC5B,IAAGA,eAAe,EAAC;;MAEvB;IAAA,CACK,MAAI;MAED,MAAMG,OAAO,GAAGpB,SAAS,CAACqB,IAAI,CAAED,OAAO,IAAGA,OAAO,CAACN,EAAE,KAAKN,MAAM,CAACO,OAAO,CAACC,SAAS,CAAC;MAElFE,OAAO,CAACC,GAAG,CAACC,OAAO,CAAC;IAExB;EAEJ;EACA,OAAOb,KAAK;AACZ,CAAC;AAED,OAAO,MAAMe,qBAAqB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG3B,UAAU,CAACO,WAAW,EAAE;IAElDF,KAAK,EAAE;EACX,CAAC,CAAC;;EAIN;EACI,MAAMuB,mBAAmB,GAAGX,SAAS,IAAI;IAErCU,YAAY,CAAC;MAETjB,IAAI,EAAC,qBAAqB;MAC1BM,OAAO,EAAEC;IAEb,CAAC,CAAC;EACN,CAAC;EAGD,MAAMY,YAAY,GAAG;IACjBxB,KAAK,EAAE,EAAE;IACTC,aAAa,EAAEsB;EACnB,CAAC;EAED,oBACIzB,OAAA,CAACC,aAAa,CAAC0B,QAAQ;IAACC,KAAK,EAAEF,YAAa;IAAAL,QAAA,EACvCA;EAAQ;IAAAQ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAEjC,CAAC;AAACV,EAAA,CA9BWF,qBAAqB;AAAAa,EAAA,GAArBb,qBAAqB;AAgClC,eAAenB,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}