{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\components\\\\Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo } from 'react';\nimport '../styles/ficheproduit.css';\nimport \"../styles/dropdown.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MobileDropdown = ({\n  selectedCategories,\n  handleCategoryChange,\n  handleReset\n}) => {\n  _s();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const [categories, setCategories] = useState([]);\n  // ... autres états ...\n\n  useEffect(() => {\n    // Charger les catégories ici...\n    const newCategory = \"Tous les produits\";\n    const updatedUniqueCategories = [newCategory, ...categories];\n    setCategories(updatedUniqueCategories);\n  }, []);\n\n  // ... autres fonctions ...\n\n  // Utilisez useMemo pour optimiser les fonctions de filtrage\n  const filteredChocolats = useMemo(() => {\n    // Logique de filtrage...\n    // ...\n  }, [chocolats, selectedCategories, prixMin, prixMax, noteMin, noteMax]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobileDropdownContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      onClick: toggleDropdown,\n      children: \"Cat\\xE9gorie\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobileDropdownContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: handleCategoryClick,\n        children: \"filtre\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `MobilePanelForm_${category}`,\n          name: category,\n          checked: selectedCategories.includes(category),\n          onChange: () => handleCategoryChange(category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `MobilePanelForm_${category}`,\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"resetbutt\",\n        onClick: handleReset,\n        children: \"Reset all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MobileDropdown, \"A/8nuxndwaO7c6/ts9WSn9WMy2c=\");\n_c = MobileDropdown;\nexport default MobileDropdown;\nvar _c;\n$RefreshReg$(_c, \"MobileDropdown\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","jsxDEV","_jsxDEV","MobileDropdown","selectedCategories","handleCategoryChange","handleReset","_s","isDropdownOpen","setIsDropdownOpen","categories","setCategories","newCategory","updatedUniqueCategories","filteredChocolats","chocolats","prixMin","prixMax","noteMin","noteMax","className","children","onClick","toggleDropdown","fileName","_jsxFileName","lineNumber","columnNumber","handleCategoryClick","map","category","type","id","name","checked","includes","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/components/Dropdown.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport '../styles/ficheproduit.css';\r\nimport \"../styles/dropdown.css\";\r\n\r\nconst MobileDropdown = ({ selectedCategories, handleCategoryChange, handleReset }) => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n  const [categories, setCategories] = useState([]);\r\n  // ... autres états ...\r\n\r\n  useEffect(() => {\r\n    // Charger les catégories ici...\r\n    const newCategory = \"Tous les produits\";\r\n    const updatedUniqueCategories = [newCategory, ...categories];\r\n    setCategories(updatedUniqueCategories);\r\n  }, []);\r\n\r\n  // ... autres fonctions ...\r\n\r\n  // Utilisez useMemo pour optimiser les fonctions de filtrage\r\n  const filteredChocolats = useMemo(() => {\r\n    // Logique de filtrage...\r\n    // ...\r\n  }, [chocolats, selectedCategories, prixMin, prixMax, noteMin, noteMax]);\r\n\r\n  return (\r\n    <div className=\"mobileDropdownContainer\">\r\n      <h4 onClick={toggleDropdown}>Catégorie</h4>\r\n      {isDropdownOpen && (\r\n        <div className=\"mobileDropdownContent\">\r\n          <h4 onClick={handleCategoryClick}>filtre</h4>\r\n          {categories.map((category) => (\r\n            <div key={category}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`MobilePanelForm_${category}`}\r\n                name={category}\r\n                checked={selectedCategories.includes(category)}\r\n                onChange={() => handleCategoryChange(category)}\r\n              />\r\n              <label htmlFor={`MobilePanelForm_${category}`}>{category}</label>\r\n            </div>\r\n          ))}\r\n          <span className=\"resetbutt\" onClick={handleReset}>Reset all</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileDropdown;\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AAC3D,OAAO,4BAA4B;AACnC,OAAO,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,kBAAkB;EAAEC,oBAAoB;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACpF,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAChD;;EAEAC,SAAS,CAAC,MAAM;IACd;IACA,MAAMa,WAAW,GAAG,mBAAmB;IACvC,MAAMC,uBAAuB,GAAG,CAACD,WAAW,EAAE,GAAGF,UAAU,CAAC;IAC5DC,aAAa,CAACE,uBAAuB,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;;EAEN;;EAEA;EACA,MAAMC,iBAAiB,GAAGd,OAAO,CAAC,MAAM;IACtC;IACA;EAAA,CACD,EAAE,CAACe,SAAS,EAAEX,kBAAkB,EAAEY,OAAO,EAAEC,OAAO,EAAEC,OAAO,EAAEC,OAAO,CAAC,CAAC;EAEvE,oBACEjB,OAAA;IAAKkB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCnB,OAAA;MAAIoB,OAAO,EAAEC,cAAe;MAAAF,QAAA,EAAC;IAAS;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1CnB,cAAc,iBACbN,OAAA;MAAKkB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCnB,OAAA;QAAIoB,OAAO,EAAEM,mBAAoB;QAAAP,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC5CjB,UAAU,CAACmB,GAAG,CAAEC,QAAQ,iBACvB5B,OAAA;QAAAmB,QAAA,gBACEnB,OAAA;UACE6B,IAAI,EAAC,UAAU;UACfC,EAAE,EAAG,mBAAkBF,QAAS,EAAE;UAClCG,IAAI,EAAEH,QAAS;UACfI,OAAO,EAAE9B,kBAAkB,CAAC+B,QAAQ,CAACL,QAAQ,CAAE;UAC/CM,QAAQ,EAAEA,CAAA,KAAM/B,oBAAoB,CAACyB,QAAQ;QAAE;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFzB,OAAA;UAAOmC,OAAO,EAAG,mBAAkBP,QAAS,EAAE;UAAAT,QAAA,EAAES;QAAQ;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GARzDG,QAAQ;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACN,CAAC,eACFzB,OAAA;QAAMkB,SAAS,EAAC,WAAW;QAACE,OAAO,EAAEhB,WAAY;QAAAe,QAAA,EAAC;MAAS;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACpB,EAAA,CA3CIJ,cAAc;AAAAmC,EAAA,GAAdnC,cAAc;AA6CpB,eAAeA,cAAc;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}