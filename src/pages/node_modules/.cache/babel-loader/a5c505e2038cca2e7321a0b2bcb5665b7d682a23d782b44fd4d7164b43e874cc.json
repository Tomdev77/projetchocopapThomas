{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\components\\\\gallerie.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useMemo, useCallback } from 'react';\nimport ListeChocolats from '../pages/pageficheproduitjson';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = () => {\n  _s();\n  const [categoryFilter, setCategoryFilter] = useState('all');\n  const [chocolats, setChocolats] = useState([]);\n  const [filteredImages, setFilteredImages] = useState([]);\n\n  // Memoized version of fetchData function\n  const fetchData = useMemo(() => {\n    return fetch('data.json').then(response => response.json()).then(data => {\n      return data.chocolats;\n    });\n  }, []);\n\n  // Memoized filtering function\n  const filterImages = useCallback((chocolats, categoryFilter) => {\n    if (categoryFilter === 'all') {\n      return chocolats;\n    } else {\n      return chocolats.filter(chocolat => chocolat.category === categoryFilter);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData().then(data => {\n      setChocolats(data);\n      setFilteredImages(data); // Initialize with all chocolates\n    });\n  }, []);\n  useEffect(() => {\n    const filtered = filterImages(chocolats, categoryFilter);\n    setFilteredImages(filtered);\n  }, [chocolats, categoryFilter]);\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    children: /*#__PURE__*/_jsxDEV(ListeChocolats, {\n      chocolats: filteredImages\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"a/k/QgKOr8gysqtbvgLFssvU7Fg=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","useEffect","useMemo","useCallback","ListeChocolats","jsxDEV","_jsxDEV","ImageGallery","_s","categoryFilter","setCategoryFilter","chocolats","setChocolats","filteredImages","setFilteredImages","fetchData","fetch","then","response","json","data","filterImages","filter","chocolat","category","filtered","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/components/gallerie.jsx"],"sourcesContent":["import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport ListeChocolats from '../pages/pageficheproduitjson';\r\n\r\nconst ImageGallery = () => {\r\n  const [categoryFilter, setCategoryFilter] = useState('all');\r\n  const [chocolats, setChocolats] = useState([]);\r\n  const [filteredImages, setFilteredImages] = useState([]);\r\n\r\n  // Memoized version of fetchData function\r\n  const fetchData = useMemo(() => {\r\n    return fetch('data.json')\r\n      .then(response => response.json())\r\n      .then(data => {\r\n        return data.chocolats;\r\n      });\r\n  }, []);\r\n\r\n  // Memoized filtering function\r\n  const filterImages = useCallback((chocolats, categoryFilter) => {\r\n    if (categoryFilter === 'all') {\r\n      return chocolats;\r\n    } else {\r\n      return chocolats.filter(chocolat => chocolat.category === categoryFilter);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData().then(data => {\r\n      setChocolats(data);\r\n      setFilteredImages(data);  // Initialize with all chocolates\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = filterImages(chocolats, categoryFilter);\r\n    setFilteredImages(filtered);\r\n  }, [chocolats, categoryFilter]);\r\n\r\n  return (\r\n    <article>\r\n      <ListeChocolats chocolats={filteredImages} />\r\n    </article>\r\n  );\r\n};\r\n\r\nexport default ImageGallery;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,OAAO,EAAEC,WAAW,QAAQ,OAAO;AACxE,OAAOC,cAAc,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAC3D,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAMe,SAAS,GAAGb,OAAO,CAAC,MAAM;IAC9B,OAAOc,KAAK,CAAC,WAAW,CAAC,CACtBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAI;MACZ,OAAOA,IAAI,CAACT,SAAS;IACvB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMU,YAAY,GAAGlB,WAAW,CAAC,CAACQ,SAAS,EAAEF,cAAc,KAAK;IAC9D,IAAIA,cAAc,KAAK,KAAK,EAAE;MAC5B,OAAOE,SAAS;IAClB,CAAC,MAAM;MACL,OAAOA,SAAS,CAACW,MAAM,CAACC,QAAQ,IAAIA,QAAQ,CAACC,QAAQ,KAAKf,cAAc,CAAC;IAC3E;EACF,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACdc,SAAS,CAAC,CAAC,CAACE,IAAI,CAACG,IAAI,IAAI;MACvBR,YAAY,CAACQ,IAAI,CAAC;MAClBN,iBAAiB,CAACM,IAAI,CAAC,CAAC,CAAE;IAC5B,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAENnB,SAAS,CAAC,MAAM;IACd,MAAMwB,QAAQ,GAAGJ,YAAY,CAACV,SAAS,EAAEF,cAAc,CAAC;IACxDK,iBAAiB,CAACW,QAAQ,CAAC;EAC7B,CAAC,EAAE,CAACd,SAAS,EAAEF,cAAc,CAAC,CAAC;EAE/B,oBACEH,OAAA;IAAAoB,QAAA,eACEpB,OAAA,CAACF,cAAc;MAACO,SAAS,EAAEE;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtC,CAAC;AAEd,CAAC;AAACtB,EAAA,CAxCID,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA0ClB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}