{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\components\\\\Dropdown.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport '../styles/ficheproduit.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MobileDropdown = ({\n  categories,\n  selectedCategories,\n  handleCategoryChange,\n  prixMin,\n  prixMax,\n  handlePrixMinChange,\n  handlePrixMaxChange,\n  noteMin,\n  noteMax,\n  handleNoteMinChange,\n  handleNoteMaxChange,\n  handleReset\n}) => {\n  _s();\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\n  const toggleDropdown = () => {\n    setIsDropdownOpen(!isDropdownOpen);\n  };\n  const handleCategoryClick = () => {\n    // Ouvrir le menu déroulant seulement si la catégorie est actuellement fermée\n    if (!isDropdownOpen) {\n      setIsDropdownOpen(true);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mobileDropdownContainer\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      onClick: toggleDropdown,\n      children: \"Filtre\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), isDropdownOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mobileDropdownContent\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        onClick: handleCategoryClick,\n        children: \"Cat\\xE9gorie\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), categories.map(category => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          id: `MobilePanelForm_${category}`,\n          name: category,\n          checked: selectedCategories.includes(category),\n          onChange: () => handleCategoryChange(category)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: `MobilePanelForm_${category}`,\n          children: category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 15\n        }, this)]\n      }, category, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"resetbutt\",\n        onClick: handleReset,\n        children: \"Reset all\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(MobileDropdown, \"V8e9uWL0aZcxWbWsGpr6VZQUTDg=\");\n_c = MobileDropdown;\nexport default MobileDropdown;\nvar _c;\n$RefreshReg$(_c, \"MobileDropdown\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MobileDropdown","categories","selectedCategories","handleCategoryChange","prixMin","prixMax","handlePrixMinChange","handlePrixMaxChange","noteMin","noteMax","handleNoteMinChange","handleNoteMaxChange","handleReset","_s","isDropdownOpen","setIsDropdownOpen","toggleDropdown","handleCategoryClick","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","category","type","id","name","checked","includes","onChange","htmlFor","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/components/Dropdown.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport '../styles/ficheproduit.css';\r\n\r\nconst MobileDropdown = ({ categories, selectedCategories, handleCategoryChange, prixMin, prixMax, handlePrixMinChange, handlePrixMaxChange, noteMin, noteMax, handleNoteMinChange, handleNoteMaxChange, handleReset }) => {\r\n  const [isDropdownOpen, setIsDropdownOpen] = useState(false);\r\n\r\n  const toggleDropdown = () => {\r\n    setIsDropdownOpen(!isDropdownOpen);\r\n  };\r\n\r\n  const handleCategoryClick = () => {\r\n    // Ouvrir le menu déroulant seulement si la catégorie est actuellement fermée\r\n    if (!isDropdownOpen) {\r\n      setIsDropdownOpen(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mobileDropdownContainer\">\r\n      <h4 onClick={toggleDropdown}>Filtre</h4>\r\n      {isDropdownOpen && (\r\n        <div className=\"mobileDropdownContent\">\r\n          <h4 onClick={handleCategoryClick}>Catégorie</h4>\r\n          {categories.map((category) => (\r\n            <div key={category}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={`MobilePanelForm_${category}`}\r\n                name={category}\r\n                checked={selectedCategories.includes(category)}\r\n                onChange={() => handleCategoryChange(category)}\r\n              />\r\n              <label htmlFor={`MobilePanelForm_${category}`}>{category}</label>\r\n            </div>\r\n          ))}\r\n          {/* ... Autres éléments comme Prix et Notes ... */}\r\n          <span className=\"resetbutt\" onClick={handleReset}>Reset all</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MobileDropdown;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,cAAc,GAAGA,CAAC;EAAEC,UAAU;EAAEC,kBAAkB;EAAEC,oBAAoB;EAAEC,OAAO;EAAEC,OAAO;EAAEC,mBAAmB;EAAEC,mBAAmB;EAAEC,OAAO;EAAEC,OAAO;EAAEC,mBAAmB;EAAEC,mBAAmB;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EACxN,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMmB,cAAc,GAAGA,CAAA,KAAM;IAC3BD,iBAAiB,CAAC,CAACD,cAAc,CAAC;EACpC,CAAC;EAED,MAAMG,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA,IAAI,CAACH,cAAc,EAAE;MACnBC,iBAAiB,CAAC,IAAI,CAAC;IACzB;EACF,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCpB,OAAA;MAAIqB,OAAO,EAAEJ,cAAe;MAAAG,QAAA,EAAC;IAAM;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACvCV,cAAc,iBACbf,OAAA;MAAKmB,SAAS,EAAC,uBAAuB;MAAAC,QAAA,gBACpCpB,OAAA;QAAIqB,OAAO,EAAEH,mBAAoB;QAAAE,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAC/CvB,UAAU,CAACwB,GAAG,CAAEC,QAAQ,iBACvB3B,OAAA;QAAAoB,QAAA,gBACEpB,OAAA;UACE4B,IAAI,EAAC,UAAU;UACfC,EAAE,EAAG,mBAAkBF,QAAS,EAAE;UAClCG,IAAI,EAAEH,QAAS;UACfI,OAAO,EAAE5B,kBAAkB,CAAC6B,QAAQ,CAACL,QAAQ,CAAE;UAC/CM,QAAQ,EAAEA,CAAA,KAAM7B,oBAAoB,CAACuB,QAAQ;QAAE;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD,CAAC,eACFzB,OAAA;UAAOkC,OAAO,EAAG,mBAAkBP,QAAS,EAAE;UAAAP,QAAA,EAAEO;QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA,GARzDE,QAAQ;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACN,CAAC,eAEFzB,OAAA;QAAMmB,SAAS,EAAC,WAAW;QAACE,OAAO,EAAER,WAAY;QAAAO,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/D,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACX,EAAA,CAtCIb,cAAc;AAAAkC,EAAA,GAAdlC,cAAc;AAwCpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}