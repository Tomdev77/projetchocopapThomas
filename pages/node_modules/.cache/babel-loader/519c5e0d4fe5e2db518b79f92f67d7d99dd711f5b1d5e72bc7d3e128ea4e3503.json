{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\components\\\\ChocolatFilter.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction ChocolateFilter({\n  chocolats\n}) {\n  _s();\n  const [chocolat, setChocolats] = useState([]);\n  const [prixMin, setPrixMin] = useState('');\n  const [prixMax, setPrixMax] = useState('');\n  useEffect(() => {\n    // Récupération des données depuis data.json\n    fetch('/path/to/data.json').then(response => response.json()).then(data => setChocolats(data)).catch(error => console.error('Erreur lors de la récupération des données:', error));\n  }, []);\n  const [isFilterActive, setFilteredactive] = useState(false); // This line defines the state variables\n\n  const handlePrixMinChange = e => {\n    setPrixMin();\n  };\n  const handlePrixMaxChange = e => {\n    setPrixMax();\n  };\n  const chocolatFiltres = chocolat.filter(chocolat => {\n    if (prixMin && prixMax) {\n      return chocolat.price >= parseFloat(prixMin) && chocolat.price <= parseFloat(prixMax);\n    } else if (prixMin) {\n      return chocolat.price >= parseFloat(prixMin);\n    } else if (prixMax) {\n      return chocolat.price <= parseFloat(prixMax);\n    }\n    return true;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Prix minimum\",\n        value: prixMin,\n        min: \"0\",\n        max: \"10\",\n        step: \"2\",\n        onChange: handlePrixMinChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prix Min\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        placeholder: \"Prix maximum\",\n        value: prixMax,\n        min: \"10\",\n        max: \"50\",\n        step: \"2\",\n        onChange: handlePrixMaxChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Prix Max\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"article\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(ChocolateFilter, \"mQojyOyev24gHO9PBOu4SIDk2lw=\");\n_c = ChocolateFilter;\nexport default ChocolateFilter;\nvar _c;\n$RefreshReg$(_c, \"ChocolateFilter\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","ChocolateFilter","chocolats","_s","chocolat","setChocolats","prixMin","setPrixMin","prixMax","setPrixMax","fetch","then","response","json","data","catch","error","console","isFilterActive","setFilteredactive","handlePrixMinChange","e","handlePrixMaxChange","chocolatFiltres","filter","price","parseFloat","children","type","placeholder","value","min","max","step","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/components/ChocolatFilter.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n\r\nfunction ChocolateFilter({ chocolats }) {\r\n  const [chocolat, setChocolats] = useState([]);\r\n  const [prixMin, setPrixMin] = useState('');\r\n  const [prixMax, setPrixMax] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Récupération des données depuis data.json\r\n    fetch('/path/to/data.json')\r\n      .then(response => response.json())\r\n      .then(data => setChocolats(data))\r\n      .catch(error => console.error('Erreur lors de la récupération des données:', error));\r\n  }, []);\r\n\r\n\r\n  const [isFilterActive, setFilteredactive] = useState(false); // This line defines the state variables\r\n\r\n  const handlePrixMinChange = (e) => {\r\n    setPrixMin();\r\n  };\r\n\r\n  const handlePrixMaxChange = (e) => {\r\n    setPrixMax();\r\n  };\r\n\r\n  const chocolatFiltres = chocolat.filter(chocolat => {\r\n    if (prixMin && prixMax) {\r\n        return chocolat.price >= parseFloat(prixMin) && chocolat.price <= parseFloat(prixMax);\r\n      } else if (prixMin) {\r\n        return chocolat.price >= parseFloat(prixMin);\r\n      } else if (prixMax) {\r\n        return chocolat.price <= parseFloat(prixMax);\r\n      }\r\n      return true;\r\n    });\r\n\r\n  return (\r\n    <><div>\r\n          <input\r\n              type=\"number\"\r\n              placeholder=\"Prix minimum\"\r\n              value={prixMin}\r\n              min=\"0\" max=\"10\"\r\n              step=\"2\"\r\n              onChange={handlePrixMinChange} />\r\n              <p>Prix Min</p>\r\n          <input\r\n              type=\"number\"\r\n              placeholder=\"Prix maximum\"\r\n              value={prixMax}\r\n              min=\"10\" max=\"50\"\r\n              step=\"2\"\r\n              onChange={handlePrixMaxChange} />\r\n             <p>Prix Max</p>\r\n\r\n      </div>\r\n      <article>\r\n\r\n          </article></>\r\n\r\n);\r\n}\r\n\r\nexport default ChocolateFilter;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGnD,SAASC,eAAeA,CAAC;EAAEC;AAAU,CAAC,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,QAAQ,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC7C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAE1CC,SAAS,CAAC,MAAM;IACd;IACAc,KAAK,CAAC,oBAAoB,CAAC,CACxBC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIT,YAAY,CAACS,IAAI,CAAC,CAAC,CAChCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,6CAA6C,EAAEA,KAAK,CAAC,CAAC;EACxF,CAAC,EAAE,EAAE,CAAC;EAGN,MAAM,CAACE,cAAc,EAAEC,iBAAiB,CAAC,GAAGxB,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAE7D,MAAMyB,mBAAmB,GAAIC,CAAC,IAAK;IACjCd,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMe,mBAAmB,GAAID,CAAC,IAAK;IACjCZ,UAAU,CAAC,CAAC;EACd,CAAC;EAED,MAAMc,eAAe,GAAGnB,QAAQ,CAACoB,MAAM,CAACpB,QAAQ,IAAI;IAClD,IAAIE,OAAO,IAAIE,OAAO,EAAE;MACpB,OAAOJ,QAAQ,CAACqB,KAAK,IAAIC,UAAU,CAACpB,OAAO,CAAC,IAAIF,QAAQ,CAACqB,KAAK,IAAIC,UAAU,CAAClB,OAAO,CAAC;IACvF,CAAC,MAAM,IAAIF,OAAO,EAAE;MAClB,OAAOF,QAAQ,CAACqB,KAAK,IAAIC,UAAU,CAACpB,OAAO,CAAC;IAC9C,CAAC,MAAM,IAAIE,OAAO,EAAE;MAClB,OAAOJ,QAAQ,CAACqB,KAAK,IAAIC,UAAU,CAAClB,OAAO,CAAC;IAC9C;IACA,OAAO,IAAI;EACb,CAAC,CAAC;EAEJ,oBACEV,OAAA,CAAAE,SAAA;IAAA2B,QAAA,gBAAE7B,OAAA;MAAA6B,QAAA,gBACI7B,OAAA;QACI8B,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAExB,OAAQ;QACfyB,GAAG,EAAC,GAAG;QAACC,GAAG,EAAC,IAAI;QAChBC,IAAI,EAAC,GAAG;QACRC,QAAQ,EAAEd;MAAoB;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjCxC,OAAA;QAAA6B,QAAA,EAAG;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACnBxC,OAAA;QACI8B,IAAI,EAAC,QAAQ;QACbC,WAAW,EAAC,cAAc;QAC1BC,KAAK,EAAEtB,OAAQ;QACfuB,GAAG,EAAC,IAAI;QAACC,GAAG,EAAC,IAAI;QACjBC,IAAI,EAAC,GAAG;QACRC,QAAQ,EAAEZ;MAAoB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAClCxC,OAAA;QAAA6B,QAAA,EAAG;MAAQ;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEjB,CAAC,eACNxC,OAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEa,CAAC;EAAA,eAAE,CAAC;AAGvB;AAACnC,EAAA,CA5DQF,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AA8DxB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}