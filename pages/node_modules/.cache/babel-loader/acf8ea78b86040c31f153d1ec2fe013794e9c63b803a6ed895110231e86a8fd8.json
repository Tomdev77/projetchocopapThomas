{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\store\\\\panier-context.jsx\",\n  _s = $RefreshSig$();\nimport { createContext, useReducer } from \"react\";\nimport chocolats from \"../store/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PanierContext = /*#__PURE__*/createContext({\n  items: [],\n  addItemToCart: () => {},\n  updateItemsquantity: () => {},\n  resetItems: () => {},\n  removeItemFromCart: () => {}\n});\nconst [cartState, setCartState] = useState({\n  items: []\n});\nconst handleProductToCart = productId => {\n  // Logique pour ajouter un produit au panier\n  setCartState(prevState => ({\n    ...prevState,\n    items: [...prevState.items, {\n      id: productId,\n      quantity: 1\n    }]\n  }));\n};\nconst cartReducer = (state, action) => {\n  switch (action.type) {\n    case \"AJOUTER_DANS_PANIER\":\n      const existingItem = state.items.find(item => item.id === action.payload.productId);\n      const updatedItems = [...state.items];\n      if (existingItem) {\n        const index = updatedItems.findIndex(item => item.id === action.payload.productId);\n        updatedItems[index].quantity += 1;\n      } else {\n        const product = chocolats.chocolats.find(p => p.id === action.payload.productId);\n        if (product) {\n          updatedItems.push({\n            id: product.id,\n            title: product.title,\n            price: product.price,\n            quantity: 1\n          });\n        }\n      }\n      return {\n        ...state,\n        items: updatedItems\n      };\n    case \"RETIRER_DU_PANIER\":\n      const filteredItems = state.items.filter(item => item.id !== action.payload.productId);\n      return {\n        ...state,\n        items: filteredItems\n      };\n    case \"ACTUALISER_QUANTITE_PRODUIT\":\n      const {\n        productId,\n        quantity\n      } = action.payload;\n      const itemToUpdate = state.items.find(item => item.id === productId);\n      if (itemToUpdate) {\n        const index = state.items.findIndex(item => item.id === productId);\n        const updatedQuantity = itemToUpdate.quantity + quantity;\n        const newItems = [...state.items];\n        if (updatedQuantity <= 0) {\n          newItems.splice(index, 1);\n        } else {\n          newItems[index].quantity = updatedQuantity;\n        }\n        return {\n          ...state,\n          items: newItems\n        };\n      }\n      return state;\n    case 'RESET_ITEMS':\n      // logique pour réinitialiser le panier\n      return {\n        ...state,\n        items: []\n      };\n    default:\n      return state;\n  }\n};\nexport const PanierContextProvider = ({\n  children\n}) => {\n  _s();\n  const [cartState, cartDispatch] = useReducer(cartReducer, {\n    items: []\n  });\n  const resetItems = () => {\n    cartDispatch({\n      type: \"RESET_ITEMS\"\n    });\n  };\n  const handleProductToCart = productId => {\n    cartDispatch({\n      type: \"AJOUTER_DANS_PANIER\",\n      payload: {\n        productId\n      }\n    });\n  };\n  const handleRemoveFromCart = productId => {\n    cartDispatch({\n      type: \"RETIRER_DU_PANIER\",\n      payload: {\n        productId\n      }\n    });\n  };\n  const handleUpdateProductQuantity = (productId, quantity) => {\n    cartDispatch({\n      type: \"ACTUALISER_QUANTITE_PRODUIT\",\n      payload: {\n        productId,\n        quantity\n      }\n    });\n  };\n  const initialValue = {\n    items: cartState.items,\n    addItemToCart: handleProductToCart,\n    removeItemFromCart: handleRemoveFromCart,\n    updateItemsquantity: handleUpdateProductQuantity,\n    resetItems: resetItems\n  };\n  return /*#__PURE__*/_jsxDEV(PanierContext.Provider, {\n    value: initialValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n_s(PanierContextProvider, \"x8hny0CQ9YZ4g6W1SEW52nr/S0U=\");\n_c = PanierContextProvider;\nexport default PanierContext;\nvar _c;\n$RefreshReg$(_c, \"PanierContextProvider\");","map":{"version":3,"names":["createContext","useReducer","chocolats","jsxDEV","_jsxDEV","PanierContext","items","addItemToCart","updateItemsquantity","resetItems","removeItemFromCart","cartState","setCartState","useState","handleProductToCart","productId","prevState","id","quantity","cartReducer","state","action","type","existingItem","find","item","payload","updatedItems","index","findIndex","product","p","push","title","price","filteredItems","filter","itemToUpdate","updatedQuantity","newItems","splice","PanierContextProvider","children","_s","cartDispatch","handleRemoveFromCart","handleUpdateProductQuantity","initialValue","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/store/panier-context.jsx"],"sourcesContent":["import { createContext, useReducer } from \"react\";\r\nimport chocolats from \"../store/data.json\";\r\n\r\nexport const PanierContext = createContext({\r\n    items: [],\r\n    addItemToCart: () => {},\r\n    updateItemsquantity : ()=>{},\r\n    resetItems :()=>{},\r\n    removeItemFromCart:()=>{},\r\n});\r\n\r\nconst [cartState, setCartState] = useState({ items: [] });\r\n\r\nconst handleProductToCart = (productId) => {\r\n    // Logique pour ajouter un produit au panier\r\n    setCartState(prevState => ({\r\n        ...prevState,\r\n        items: [...prevState.items, { id: productId, quantity: 1 }]\r\n    }));\r\n};\r\nconst cartReducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"AJOUTER_DANS_PANIER\":\r\n            const existingItem = state.items.find(item => item.id === action.payload.productId);\r\n            const updatedItems = [...state.items];\r\n\r\n            if (existingItem) {\r\n                const index = updatedItems.findIndex(item => item.id === action.payload.productId);\r\n                updatedItems[index].quantity += 1;\r\n            } else {\r\n                const product = chocolats.chocolats.find(p => p.id === action.payload.productId);\r\n                if (product) {\r\n                    updatedItems.push({\r\n                        id: product.id,\r\n                        title: product.title,\r\n                        price: product.price,\r\n                        quantity: 1,\r\n                    });\r\n                }\r\n            }\r\n            return { ...state, items: updatedItems };\r\n\r\n        case \"RETIRER_DU_PANIER\":\r\n            const filteredItems = state.items.filter(item => item.id !== action.payload.productId);\r\n            return { ...state, items: filteredItems };\r\n\r\n        case \"ACTUALISER_QUANTITE_PRODUIT\":\r\n            const { productId, quantity } = action.payload;\r\n            const itemToUpdate = state.items.find(item => item.id === productId);\r\n\r\n            if (itemToUpdate) {\r\n                const index = state.items.findIndex(item => item.id === productId);\r\n                const updatedQuantity = itemToUpdate.quantity + quantity;\r\n\r\n                const newItems = [...state.items];\r\n                if (updatedQuantity <= 0) {\r\n                    newItems.splice(index, 1);\r\n                } else {\r\n                    newItems[index].quantity = updatedQuantity;\r\n                }\r\n                return { ...state, items: newItems };\r\n            }\r\n            return state;\r\n\r\n            case 'RESET_ITEMS':\r\n                // logique pour réinitialiser le panier\r\n                return { ...state, items: [] };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const PanierContextProvider = ({ children }) => {\r\n    const [cartState, cartDispatch] = useReducer(cartReducer, {\r\n        items: [],\r\n    });\r\n\r\n    const resetItems = () => {\r\n        cartDispatch({ \r\n            \r\n            type: \"RESET_ITEMS\",\r\n\r\n        });\r\n      };\r\n\r\n    const handleProductToCart = (productId) => {\r\n        cartDispatch({\r\n            type: \"AJOUTER_DANS_PANIER\",\r\n            payload: { productId, },\r\n        });\r\n    };\r\n\r\n    const handleRemoveFromCart = (productId) => {\r\n        cartDispatch({\r\n            type: \"RETIRER_DU_PANIER\",\r\n            payload: { productId },\r\n        });\r\n    };\r\n\r\n    const handleUpdateProductQuantity =(productId, quantity)=>{\r\n\r\n        cartDispatch({\r\n\r\n            type:\"ACTUALISER_QUANTITE_PRODUIT\",\r\n            payload : {\r\n\r\n                productId,\r\n                quantity,\r\n            },\r\n        });\r\n    }\r\n\r\n    const initialValue = {\r\n        items: cartState.items,\r\n        addItemToCart: handleProductToCart,\r\n        removeItemFromCart : handleRemoveFromCart,\r\n        updateItemsquantity : handleUpdateProductQuantity,\r\n        resetItems: resetItems\r\n    };\r\n\r\n    return (\r\n        <PanierContext.Provider value={initialValue}>\r\n            {children}\r\n        </PanierContext.Provider>\r\n    );\r\n};\r\n\r\nexport default PanierContext;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}