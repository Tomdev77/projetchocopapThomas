{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CALVESI\\\\OneDrive\\\\Bureau\\\\ProjectThomasChocoPap\\\\src\\\\components\\\\post.jsx\",\n  _s = $RefreshSig$();\nimport { useRef } from \"react\";\nimport clsx from \"clsx\";\nimport useLazyLoad from \"./useLazyLoad\";\nimport { Card } from './Card';\nimport { LoadingPosts } from './LoadingPosts';\nimport posts from './data.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NUM_PER_PAGE = 6;\nconst TOTAL_PAGES = 3;\nexport const Posts = () => {\n  _s();\n  const images = posts[\"data\"];\n  const triggerRef = useRef(null);\n  const onGrabData = currentPage => {\n    // This would be where you'll call your API\n    return new Promise(resolve => {\n      setTimeout(() => {\n        const data = images.slice((currentPage - 1) % TOTAL_PAGES * NUM_PER_PAGE, NUM_PER_PAGE * (currentPage % TOTAL_PAGES));\n        console.log(data);\n        resolve(data);\n      }, 3000);\n    });\n  };\n  const {\n    data,\n    loading\n  } = useLazyLoad({\n    triggerRef,\n    onGrabData\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-3 gap-4 content-start\",\n      children: data.map(image => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          owner: image[\"owner\"],\n          imageUrl: image[\"imageUrl\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: triggerRef,\n      className: clsx(\"trigger\", {\n        visible: loading\n      }),\n      children: /*#__PURE__*/_jsxDEV(LoadingPosts, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(Posts, \"TCE5UcuxmQZy9ZVatE/nUMZvZxo=\", false, function () {\n  return [useLazyLoad];\n});\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useRef","clsx","useLazyLoad","Card","LoadingPosts","posts","jsxDEV","_jsxDEV","Fragment","_Fragment","NUM_PER_PAGE","TOTAL_PAGES","Posts","_s","images","triggerRef","onGrabData","currentPage","Promise","resolve","setTimeout","data","slice","console","log","loading","children","className","map","image","owner","imageUrl","fileName","_jsxFileName","lineNumber","columnNumber","ref","visible","_c","$RefreshReg$"],"sources":["C:/Users/CALVESI/OneDrive/Bureau/ProjectThomasChocoPap/src/components/post.jsx"],"sourcesContent":["import { useRef } from \"react\";\r\nimport clsx from \"clsx\";\r\nimport useLazyLoad from \"./useLazyLoad\";\r\nimport { Card } from './Card';\r\nimport { LoadingPosts } from './LoadingPosts';\r\nimport posts from './data.json';\r\n\r\nconst NUM_PER_PAGE = 6;\r\nconst TOTAL_PAGES = 3;\r\n\r\nexport const Posts = () => {\r\n    const images = posts[\"data\"];\r\n    const triggerRef = useRef(null);\r\n    const onGrabData = (currentPage) => {\r\n        // This would be where you'll call your API\r\n        return new Promise((resolve) => {\r\n        setTimeout(() => {\r\n            const data = images.slice(\r\n            ((currentPage - 1)%TOTAL_PAGES) * NUM_PER_PAGE,\r\n            NUM_PER_PAGE * (currentPage%TOTAL_PAGES)\r\n            );\r\n            console.log(data);\r\n            resolve(data);\r\n        }, 3000);\r\n        });\r\n    };\r\n    const { data, loading } = useLazyLoad({ triggerRef, onGrabData });\r\n    return (\r\n        <>\r\n        <div className=\"grid grid-cols-3 gap-4 content-start\">\r\n        {data.map(image => {\r\n            return <Card owner={image[\"owner\"]} imageUrl={image[\"imageUrl\"]} />\r\n        })}\r\n        </div>\r\n        <div ref={triggerRef} className={clsx(\"trigger\", { visible: loading })}>\r\n            <LoadingPosts />\r\n        </div>\r\n        </>\r\n    );\r\n}"],"mappings":";;AAAA,SAASA,MAAM,QAAQ,OAAO;AAC9B,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,IAAI,QAAQ,QAAQ;AAC7B,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,OAAOC,KAAK,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEhC,MAAMC,YAAY,GAAG,CAAC;AACtB,MAAMC,WAAW,GAAG,CAAC;AAErB,OAAO,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAMC,MAAM,GAAGT,KAAK,CAAC,MAAM,CAAC;EAC5B,MAAMU,UAAU,GAAGf,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMgB,UAAU,GAAIC,WAAW,IAAK;IAChC;IACA,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;MAChCC,UAAU,CAAC,MAAM;QACb,MAAMC,IAAI,GAAGP,MAAM,CAACQ,KAAK,CACxB,CAACL,WAAW,GAAG,CAAC,IAAEN,WAAW,GAAID,YAAY,EAC9CA,YAAY,IAAIO,WAAW,GAACN,WAAW,CACvC,CAAC;QACDY,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;QACjBF,OAAO,CAACE,IAAI,CAAC;MACjB,CAAC,EAAE,IAAI,CAAC;IACR,CAAC,CAAC;EACN,CAAC;EACD,MAAM;IAAEA,IAAI;IAAEI;EAAQ,CAAC,GAAGvB,WAAW,CAAC;IAAEa,UAAU;IAAEC;EAAW,CAAC,CAAC;EACjE,oBACIT,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACAnB,OAAA;MAAKoB,SAAS,EAAC,sCAAsC;MAAAD,QAAA,EACpDL,IAAI,CAACO,GAAG,CAACC,KAAK,IAAI;QACf,oBAAOtB,OAAA,CAACJ,IAAI;UAAC2B,KAAK,EAAED,KAAK,CAAC,OAAO,CAAE;UAACE,QAAQ,EAAEF,KAAK,CAAC,UAAU;QAAE;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MACvE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eACN5B,OAAA;MAAK6B,GAAG,EAAErB,UAAW;MAACY,SAAS,EAAE1B,IAAI,CAAC,SAAS,EAAE;QAAEoC,OAAO,EAAEZ;MAAQ,CAAC,CAAE;MAAAC,QAAA,eACnEnB,OAAA,CAACH,YAAY;QAAA4B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC;EAAA,eACJ,CAAC;AAEX,CAAC;AAAAtB,EAAA,CA7BYD,KAAK;EAAA,QAgBYV,WAAW;AAAA;AAAAoC,EAAA,GAhB5B1B,KAAK;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}